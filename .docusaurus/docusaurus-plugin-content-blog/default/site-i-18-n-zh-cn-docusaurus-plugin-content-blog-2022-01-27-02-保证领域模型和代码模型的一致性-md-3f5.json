{
  "permalink": "/zh-cn/blog/保证领域模型和代码模型的一致性",
  "source": "@site/i18n/zh-cn/docusaurus-plugin-content-blog/2022-01-27-02-保证领域模型和代码模型的一致性.md",
  "title": "保证领域模型和代码模型的一致性",
  "description": "DDD 强调先构建领域模型然后设计微服务，以保证领域模型和微服务的一体性，因此我们不能脱离领域模型来谈微服务的设计和落地。但在构建领域模型时，我们往往是站在业务视角的，并且有些领域对象还带着业务语言。我们还需要将领域模型作为微服务设计的输入，对领域对象进行设计和转换，让领域对象与代码对象建立映射关系。",
  "date": "2022-01-27T00:00:00.000Z",
  "formattedDate": "2022年1月27日",
  "tags": [
    {
      "label": "Golang",
      "permalink": "/zh-cn/blog/tags/golang"
    },
    {
      "label": "Rust",
      "permalink": "/zh-cn/blog/tags/rust"
    },
    {
      "label": "kubernetes",
      "permalink": "/zh-cn/blog/tags/kubernetes"
    },
    {
      "label": "spark",
      "permalink": "/zh-cn/blog/tags/spark"
    },
    {
      "label": "Java",
      "permalink": "/zh-cn/blog/tags/java"
    }
  ],
  "readingTime": 0.335,
  "truncated": false,
  "prevItem": {
    "title": "DDD设计实例",
    "permalink": "/zh-cn/blog/DDD设计实例"
  },
  "nextItem": {
    "title": "如何构建领域模型",
    "permalink": "/zh-cn/blog/如何构建领域模型"
  }
}